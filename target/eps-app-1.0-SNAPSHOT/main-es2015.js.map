{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/carrera-detalle/carrera-detalle.component.html","./src/app/carrera/carrera.component.html","./src/app/carta-detalle/carta-detalle.html","./src/app/carta/carta.html","./src/app/estudiante-detalle/datos/datos.html","./src/app/estudiante-detalle/estudiante-detalle.component.html","./src/app/estudiante-detalle/incorporaciones/detalle/detalle.html","./src/app/estudiante-detalle/incorporaciones/incorporaciones.html","./src/app/estudiante/estudiante.component.html","./src/app/inicio-panel/inicio-panel.component.html","./src/app/institucion-detalle/institucion-detalle.component.html","./src/app/institucion/InstitucionList.html","./src/app/institucion/institucion.component.html","./src/app/menu/simple.html","./node_modules/tslib/tslib.es6.js","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.interceptor.ts","./src/app/app.module.ts","./src/app/app.service.ts","./src/app/carrera-detalle/carrera-detalle.component.ts","./src/app/carrera.service.ts","./src/app/carrera/carrera.component.ts","./src/app/carta-detalle/carta-detalle.ts","./src/app/carta.service.ts","./src/app/carta/carta.ts","./src/app/estudiante-detalle/datos/datos.component.ts","./src/app/estudiante-detalle/estudiante-detalle.component.ts","./src/app/estudiante-detalle/incorporaciones/detalle/detalle.ts","./src/app/estudiante-detalle/incorporaciones/incorporaciones.ts","./src/app/estudiante.service.ts","./src/app/estudiante/estudiante.component.ts","./src/app/incorporacion.service.ts","./src/app/inicio-panel/inicio-panel.component.ts","./src/app/institucion-detalle/institucion-detalle.component.ts","./src/app/institucion.service.ts","./src/app/institucion/InstitucionList.ts","./src/app/institucion/institucion.component.ts","./src/app/mensaje.service.ts","./src/app/menu/simple.ts","./src/app/modelos.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \"\\r\\n<div class=\\\"section\\\" style=\\\"padding-top: 25px;\\\">\\r\\n    <div class=\\\"container\\\">\\r\\n\\r\\n        <simple-menu></simple-menu>\\r\\n\\r\\n        <div *ngFor=\\\"let item of mensajes.list; let index = index;\\\" class=\\\"notification {{item.class}}\\\">\\r\\n            <span (click)=\\\"mensajes.del(index)\\\" class=\\\"delete\\\"></span>\\r\\n            {{item.text}}\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"box\\\">\\r\\n            <router-outlet></router-outlet>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"modal {{ mensajes.loading ? 'is-active' : '' }}\\\">\\r\\n            <div class=\\\"modal-background\\\"></div>\\r\\n            <div class=\\\"modal-content\\\">\\r\\n                <div class=\\\"box\\\">\\r\\n                    <div class=\\\"has-text-centered\\\">\\r\\n                        <span class=\\\"icon\\\">\\r\\n                            <i class=\\\"fas fa-cog fa-spin\\\"></i>\\r\\n                        </span>\\r\\n                        procesando...\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","export default \"<div class=\\\"field\\\">\\r\\n    <div class=\\\"control has-text-right\\\">\\r\\n        <a [routerLink]=\\\"['/carreras']\\\" class=\\\"button\\\">\\r\\n            <span class=\\\"icon\\\">\\r\\n                <i class=\\\"fas fa-times\\\"></i>\\r\\n            </span>\\r\\n            <span>Cerrar</span>\\r\\n        </a>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"field\\\">\\r\\n    <label for=\\\"\\\" class=\\\"label\\\">Código carrera</label>\\r\\n    <div class=\\\"control\\\">\\r\\n        <input [disabled]=\\\"hay_contenido\\\" type=\\\"number\\\" [(ngModel)]=\\\"selected.codigoCarrera\\\" class=\\\"input\\\">\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"field\\\">\\r\\n    <label for=\\\"\\\" class=\\\"label\\\">Nombre</label>\\r\\n    <div class=\\\"control\\\">\\r\\n        <input type=\\\"text\\\" [(ngModel)]=\\\"selected.nombre\\\" class=\\\"input\\\">\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<div *ngIf=\\\"hay_contenido\\\" class=\\\"buttons is-right\\\">\\r\\n    <button (click)=\\\"dodel()\\\" class=\\\"button is-danger\\\">Eliminar</button>\\r\\n    <button (click)=\\\"docancel()\\\" class=\\\"button\\\">Cancelar</button>\\r\\n    <button [disabled]=\\\"!upt_ready\\\" (click)=\\\"doupt()\\\" class=\\\"button is-success\\\">Guardar</button>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"!hay_contenido\\\" class=\\\"buttons is-right\\\">\\r\\n    <button [disabled]=\\\"!upt_ready\\\" (click)=\\\"docreate()\\\" class=\\\"button is-primary\\\">Crear</button>\\r\\n</div>\"","export default \"\\r\\n<div class=\\\"columns\\\">\\r\\n    <div class=\\\"column\\\">\\r\\n        <div class=\\\"field\\\">\\r\\n            <label class=\\\"label\\\">Buscar:</label>\\r\\n            <div class=\\\"control\\\">\\r\\n                <input [(ngModel)]=\\\"selected.nombre\\\" type=\\\"text\\\" class=\\\"input\\\" autofocus>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"column is-3\\\">\\r\\n        <a [routerLink]=\\\"['/carreras', 0]\\\" class=\\\"button is-primary is-fullwidth\\\">\\r\\n            <span class=\\\"icon\\\">\\r\\n                <i class=\\\"fas fa-plus\\\"></i>\\r\\n            </span>\\r\\n            <span>\\r\\n                Nuevo\\r\\n            </span>\\r\\n        </a>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<table class=\\\"table is-fullwidth is-striped\\\">\\r\\n    <caption>\\r\\n        {{list.length}} carrera(s)\\r\\n    </caption>\\r\\n    <thead>\\r\\n        <tr>\\r\\n            <th>Nombre</th>\\r\\n        </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n        <tr *ngFor=\\\"let item of list\\\">\\r\\n            <td>\\r\\n                <a [routerLink]=\\\"['/carreras', item.codigoCarrera]\\\" class=\\\"button is-text\\\">\\r\\n                    {{item.nombre}}\\r\\n                </a>\\r\\n            </td>\\r\\n        </tr>\\r\\n    </tbody>\\r\\n</table>\"","export default \"<div class=\\\"field\\\">\\r\\n    <div class=\\\"control has-text-right\\\">\\r\\n        <a [routerLink]=\\\"['/cartas']\\\" class=\\\"button\\\">\\r\\n            <span class=\\\"icon\\\">\\r\\n                <i class=\\\"fas fa-times\\\"></i>\\r\\n            </span>\\r\\n            <span>Cerrar</span>\\r\\n        </a>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"columns\\\">\\r\\n    <div class=\\\"column\\\">\\r\\n        <div class=\\\"field\\\">\\r\\n            <label for=\\\"\\\" class=\\\"label\\\">Nombre</label>\\r\\n            <div class=\\\"control\\\">\\r\\n                <input type=\\\"text\\\" [(ngModel)]=\\\"selected.destinatario\\\" class=\\\"input\\\">\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"column is-3\\\">\\r\\n        <div *ngIf=\\\"hay_contenido;else btnCrear\\\" class=\\\"field has-addons\\\">\\r\\n            <div class=\\\"control\\\">\\r\\n                <button (click)=\\\"dodel()\\\" class=\\\"button is-danger\\\">\\r\\n                    <span class=\\\"icon\\\">\\r\\n                        <i class=\\\"fas fa-trash\\\"></i>\\r\\n                    </span>\\r\\n                </button>\\r\\n            </div>\\r\\n            <div class=\\\"control\\\">&nbsp;</div>\\r\\n            <div class=\\\"control is-expanded\\\">\\r\\n                <button (click)=\\\"doupt()\\\" class=\\\"button is-success is-fullwidth\\\">\\r\\n                    <span class=\\\"icon\\\">\\r\\n                        <i class=\\\"fas fa-save\\\"></i>\\r\\n                    </span>\\r\\n                    <span>\\r\\n                        Guardar\\r\\n                    </span>\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n        <ng-template #btnCrear>\\r\\n            <button [disabled]=\\\"!upt_ready\\\" (click)=\\\"docreate()\\\" type=\\\"button\\\" class=\\\"button is-primary is-fullwidth\\\">\\r\\n                <span class=\\\"icon\\\">\\r\\n                    <i class=\\\"fas fa-plus\\\"></i>\\r\\n                </span>\\r\\n                <span>\\r\\n                    Crear\\r\\n                </span>\\r\\n            </button>\\r\\n        </ng-template>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<table class=\\\"table is-fullwidth is-striped\\\">\\r\\n    <caption>\\r\\n        {{selected.detalleCartaList.length}} detalle(s)\\r\\n    </caption>\\r\\n    <thead>\\r\\n        <tr>\\r\\n            <th>Cargo</th>\\r\\n            <th>Dirigido a</th>\\r\\n            <th style=\\\"width: 15%;\\\"></th>\\r\\n        </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n        <tr *ngFor=\\\"let item of selected.detalleCartaList; let index = index;\\\">\\r\\n            <td>\\r\\n                <input type=\\\"text\\\" [(ngModel)]=\\\"item.cargo\\\" class=\\\"input\\\">\\r\\n            </td>\\r\\n            <td>\\r\\n                <input type=\\\"text\\\" [(ngModel)]=\\\"item.dirigidoA\\\" class=\\\"input\\\">\\r\\n            </td>\\r\\n            <td>\\r\\n                <a (click)=\\\"selected.detalleCartaList.splice(index,1)\\\" class=\\\"button is-danger is-width is-fullwidth\\\">\\r\\n                    <span class=\\\"icon\\\">\\r\\n                        <i class=\\\"fas fa-times\\\"></i>\\r\\n                    </span>\\r\\n                </a>\\r\\n            </td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n            <td>\\r\\n                <a (click)=\\\"doadd_detalle()\\\" class=\\\"button is-primary\\\">\\r\\n                    <span class=\\\"icon\\\">\\r\\n                        <i class=\\\"fas fa-plus\\\"></i>\\r\\n                    </span>\\r\\n                </a>\\r\\n            </td>\\r\\n            <td></td>\\r\\n            <td></td>\\r\\n        </tr>\\r\\n    </tbody>\\r\\n</table>\"","export default \"<div class=\\\"columns\\\">\\r\\n    <div class=\\\"column\\\">\\r\\n        <div class=\\\"field\\\">\\r\\n            <label class=\\\"label\\\">Buscar:</label>\\r\\n            <div class=\\\"control\\\">\\r\\n                <input [(ngModel)]=\\\"selected.destinatario\\\" type=\\\"text\\\" class=\\\"input\\\" autofocus>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"column is-3\\\">\\r\\n        <a [routerLink]=\\\"['/cartas', 0]\\\" class=\\\"button is-primary is-fullwidth\\\">\\r\\n            <span class=\\\"icon\\\">\\r\\n                <i class=\\\"fas fa-plus\\\"></i>\\r\\n            </span>\\r\\n            <span>\\r\\n                Nuevo\\r\\n            </span>\\r\\n        </a>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<table class=\\\"table is-fullwidth is-striped\\\">\\r\\n    <caption>\\r\\n        {{list.length}} grupo(s)\\r\\n    </caption>\\r\\n    <thead>\\r\\n        <tr>\\r\\n            <th>Nombre</th>\\r\\n        </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n        <tr *ngFor=\\\"let item of list\\\">\\r\\n            <td>\\r\\n                <div *ngIf=\\\"es_selector;else btnLink\\\" class=\\\"control\\\">\\r\\n                    <label class=\\\"radio\\\">\\r\\n                        <input (ngModelChange)=\\\"watch_selected($event)\\\" [(ngModel)]=\\\"selected\\\" [value]=\\\"item\\\"\\r\\n                            type=\\\"radio\\\">\\r\\n                        {{item.destinatario}}\\r\\n                    </label>\\r\\n                </div>\\r\\n                <ng-template #btnLink>\\r\\n                    <a [routerLink]=\\\"['/cartas', item.idCarta]\\\" class=\\\"button is-large is-text\\\">\\r\\n                        {{item.destinatario}}\\r\\n                    </a>\\r\\n                </ng-template>\\r\\n            </td>\\r\\n        </tr>\\r\\n    </tbody>\\r\\n</table>\\r\\n\\r\\n\"","export default \"<div class=\\\"has-text-right\\\">\\r\\n    <button class=\\\"button is-primary\\\">\\r\\n        <span class=\\\"icon\\\">\\r\\n            <i class=\\\"fas fa-search\\\"></i>\\r\\n        </span>\\r\\n        <span>Buscar carnet en centro de cálculo</span>\\r\\n    </button>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"field\\\">\\r\\n    <label for=\\\"\\\" class=\\\"label\\\">Carnet</label>\\r\\n    <div class=\\\"control\\\">\\r\\n        <input [disabled]=\\\"hay_contenido\\\" [readonly]=\\\"read_only\\\" [(ngModel)]=\\\"selected.carnet\\\" type=\\\"number\\\" min=\\\"0\\\"\\r\\n            class=\\\"input\\\">\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n<div class=\\\"field\\\">\\r\\n    <label for=\\\"\\\" class=\\\"label\\\">\\r\\n        {{selected.estudianteCarreraList.length}} Carrera(s)\\r\\n    </label>\\r\\n    <div class=\\\"control\\\">\\r\\n        <table class=\\\"table is-fullwidth is-striped\\\">\\r\\n            <tbody>\\r\\n                <tr *ngFor=\\\"let item of selected.estudianteCarreraList; let index = index;\\\">\\r\\n                    <td>\\r\\n                        {{index + 1}}.\\r\\n                        {{item.fkCarrera.nombre}}\\r\\n                    </td>\\r\\n                    <td *ngIf=\\\"!read_only\\\" style=\\\"width: 15%;\\\">\\r\\n                        <button (click)=\\\"selected.estudianteCarreraList.splice(index,1)\\\"\\r\\n                            class=\\\"is-danger button is-fullwidth\\\">\\r\\n                            <span class=\\\"icon\\\">\\r\\n                                <i class=\\\"fas fa-times\\\"></i>\\r\\n                            </span>\\r\\n                        </button>\\r\\n                    </td>\\r\\n                </tr>\\r\\n                <tr *ngIf=\\\"!read_only\\\">\\r\\n                    <td>\\r\\n                        <div class=\\\"control\\\">\\r\\n                            <div class=\\\"select is-fullwidth\\\">\\r\\n                                <select [(ngModel)]=\\\"carrera_selected\\\">\\r\\n                                    <option *ngFor=\\\"let item of carrera_list\\\" [ngValue]=\\\"item\\\">\\r\\n                                        {{item.nombre}}\\r\\n                                    </option>\\r\\n                                </select>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </td>\\r\\n                    <td>\\r\\n                        <button type=\\\"button\\\" [disabled]=\\\"!carrera_selected\\\" (click)=\\\"add_carrera(carrera_selected)\\\"\\r\\n                            class=\\\"button is-primary is-fullwidth\\\">\\r\\n                            <span class=\\\"icon\\\">\\r\\n                                <i class=\\\"fas fa-plus\\\"></i>\\r\\n                            </span>\\r\\n                        </button>\\r\\n                    </td>\\r\\n                </tr>\\r\\n            </tbody>\\r\\n        </table>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n<div class=\\\"field\\\">\\r\\n    <label for=\\\"\\\" class=\\\"label\\\">CUI</label>\\r\\n    <div class=\\\"control\\\">\\r\\n        <input [readonly]=\\\"read_only\\\" [(ngModel)]=\\\"selected.cui\\\" type=\\\"number\\\" min=\\\"0\\\" class=\\\"input\\\">\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"field\\\">\\r\\n    <label for=\\\"\\\" class=\\\"label\\\">Teléfono</label>\\r\\n    <div class=\\\"control\\\">\\r\\n        <input [readonly]=\\\"read_only\\\" [(ngModel)]=\\\"selected.telefono\\\" type=\\\"number\\\" min=\\\"0\\\" class=\\\"input\\\">\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"field\\\">\\r\\n    <label for=\\\"\\\" class=\\\"label\\\">Nombre</label>\\r\\n    <div class=\\\"control\\\">\\r\\n        <input [readonly]=\\\"read_only\\\" [(ngModel)]=\\\"selected.nombre\\\" type=\\\"text\\\" class=\\\"input\\\">\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"field\\\">\\r\\n    <label for=\\\"\\\" class=\\\"label\\\">Email</label>\\r\\n    <div class=\\\"control\\\">\\r\\n        <input [readonly]=\\\"read_only\\\" [(ngModel)]=\\\"selected.correo\\\" type=\\\"text\\\" class=\\\"input\\\">\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"hay_contenido\\\" class=\\\"columns\\\">\\r\\n    <div class=\\\"column is-4\\\">\\r\\n        <button (click)=\\\"dodel()\\\" *ngIf=\\\"read_only\\\" class=\\\"button is-danger is-fullwidth\\\">\\r\\n            <span class=\\\"icon\\\">\\r\\n                <i class=\\\"fas fa-trash\\\"></i>\\r\\n            </span>\\r\\n            <span>Eliminar</span>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"column is-4\\\">\\r\\n        <button (click)=\\\"docancel()\\\" *ngIf=\\\"!read_only\\\" class=\\\"button is-fullwidth\\\">\\r\\n            <span class=\\\"icon\\\">\\r\\n                <i class=\\\"fas fa-ban\\\"></i>\\r\\n            </span>\\r\\n            <span>Cancelar</span>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"column is-4\\\">\\r\\n        <button (click)=\\\"read_only = false\\\" *ngIf=\\\"read_only\\\" class=\\\"button is-info is-fullwidth\\\">\\r\\n            <span class=\\\"icon\\\">\\r\\n                <i class=\\\"fas fa-edit\\\"></i>\\r\\n            </span>\\r\\n            <span>Editar</span>\\r\\n        </button>\\r\\n\\r\\n        <button (click)=\\\"doupt()\\\" *ngIf=\\\"!read_only\\\" [disabled]=\\\"!upt_ready\\\" class=\\\"button is-success is-fullwidth\\\">\\r\\n            <span class=\\\"icon\\\">\\r\\n                <i class=\\\"fas fa-save\\\"></i>\\r\\n            </span>\\r\\n            <span>Guardar</span>\\r\\n        </button>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"has-text-right\\\">\\r\\n    <button (click)=\\\"docreate()\\\" [disabled]=\\\"!upt_ready\\\" *ngIf=\\\"! hay_contenido\\\" class=\\\"button is-primary\\\">\\r\\n        <span class=\\\"icon\\\">\\r\\n            <i class=\\\"fas fa-plus\\\"></i>\\r\\n        </span>\\r\\n        <span>Crear</span>\\r\\n    </button>\\r\\n</div>\"","export default \"<div class=\\\"control has-text-right\\\">\\r\\n    <a [routerLink]=\\\"['/estudiante']\\\" class=\\\"button is-dark\\\">\\r\\n        <span class=\\\"icon\\\">\\r\\n            <i class=\\\"fas fa-times\\\"></i>\\r\\n        </span>\\r\\n        <span>Cerrar</span>\\r\\n    </a>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"tabs is-boxed\\\">\\r\\n    <ul>\\r\\n        <li [routerLink]=\\\"['datos']\\\" routerLinkActive=\\\"is-active\\\"><a>Datos</a></li>\\r\\n        <li [routerLink]=\\\"['incorporaciones']\\\" routerLinkActive=\\\"is-active\\\"><a>Incorporaciones</a></li>\\r\\n    </ul>\\r\\n</div>\\r\\n\\r\\n<router-outlet></router-outlet>\"","export default \"<a class=\\\"button is-dark is-pulled-right\\\" [routerLink]=\\\"['../']\\\">\\r\\n    <span class=\\\"icon\\\">\\r\\n        <span class=\\\"delete\\\"></span>\\r\\n    </span>\\r\\n</a>\\r\\n<br>\\r\\n<div class=\\\"field\\\">\\r\\n    <label for=\\\"\\\" class=\\\"label\\\">Correlativo</label>\\r\\n    <div class=\\\"control\\\">\\r\\n        <input [readonly]=\\\"read_only\\\" [(ngModel)]=\\\"selected.correlativoDoc\\\" type=\\\"text\\\" class=\\\"input\\\">\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"field\\\">\\r\\n    <label class=\\\"label\\\">Semestre</label>\\r\\n    <div class=\\\"control\\\">\\r\\n        <label class=\\\"radio\\\">\\r\\n            <input [disabled]=\\\"read_only\\\" type=\\\"radio\\\" [(ngModel)]=\\\"selected.semestre\\\" value=\\\"1\\\">\\r\\n            Primero\\r\\n        </label>\\r\\n        <label class=\\\"radio\\\">\\r\\n            <input [disabled]=\\\"read_only\\\" type=\\\"radio\\\" [(ngModel)]=\\\"selected.semestre\\\" value=\\\"2\\\">\\r\\n            Segundo\\r\\n        </label>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"columns\\\">\\r\\n    <div class=\\\"column\\\">\\r\\n        <div class=\\\"field\\\">\\r\\n            <label for=\\\"\\\" class=\\\"label\\\">Fecha inicio</label>\\r\\n            <div class=\\\"control\\\">\\r\\n                <input placeholder=\\\"yyyy-mm-dd\\\" (click)=\\\"d.toggle()\\\" ngbDatepicker #d=\\\"ngbDatepicker\\\"\\r\\n                    [disabled]=\\\"read_only\\\" [(ngModel)]=\\\"selected.fechaInicio\\\" type=\\\"text\\\" class=\\\"input\\\">\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"column\\\">\\r\\n\\r\\n        <div class=\\\"field\\\">\\r\\n            <label for=\\\"\\\" class=\\\"label\\\">Fecha finalización</label>\\r\\n            <div class=\\\"control\\\">\\r\\n                <input placeholder=\\\"yyyy-mm-dd\\\" (click)=\\\"dd.toggle()\\\" ngbDatepicker #dd=\\\"ngbDatepicker\\\"\\r\\n                    [disabled]=\\\"read_only\\\" [(ngModel)]=\\\"selected.fechaFinal\\\" type=\\\"text\\\" class=\\\"input\\\">\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"column\\\">\\r\\n        <div class=\\\"field\\\">\\r\\n            <label for=\\\"\\\" class=\\\"label\\\">Duración (meses)</label>\\r\\n            <div class=\\\"control\\\">\\r\\n                <input readonly type=\\\"text\\\" class=\\\"input\\\" value=\\\"{{duracion_eps}}\\\">\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"columns\\\">\\r\\n    <div class=\\\"column\\\">\\r\\n        <div class=\\\"field\\\">\\r\\n            <label for=\\\"\\\" class=\\\"label\\\">Fecha inicio (seguro de vida)</label>\\r\\n            <div class=\\\"control\\\">\\r\\n                <input placeholder=\\\"yyyy-mm-dd\\\" (click)=\\\"d1.toggle()\\\" ngbDatepicker #d1=\\\"ngbDatepicker\\\"\\r\\n                    [disabled]=\\\"read_only\\\" [(ngModel)]=\\\"selected.fechaInicioSeguro\\\" type=\\\"text\\\" class=\\\"input\\\">\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"column\\\">\\r\\n        <div class=\\\"field\\\">\\r\\n            <label for=\\\"\\\" class=\\\"label\\\">Fecha finalización (seguro de vida)</label>\\r\\n            <div class=\\\"control\\\">\\r\\n                <input placeholder=\\\"yyyy-mm-dd\\\" (click)=\\\"dd2.toggle()\\\" ngbDatepicker #dd2=\\\"ngbDatepicker\\\"\\r\\n                    [disabled]=\\\"read_only\\\" [(ngModel)]=\\\"selected.fechaFinalSeguro\\\" type=\\\"text\\\" class=\\\"input\\\">\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"column\\\">\\r\\n        <div class=\\\"field\\\">\\r\\n            <label for=\\\"\\\" class=\\\"label\\\">Duración (meses)</label>\\r\\n            <div class=\\\"control\\\">\\r\\n                <input readonly type=\\\"text\\\" class=\\\"input\\\" [value]=\\\"duracion_eps_seguro\\\">\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"field\\\">\\r\\n    <label for=\\\"\\\" class=\\\"label\\\">\\r\\n        Institución\\r\\n    </label>\\r\\n    <div class=\\\"control\\\">\\r\\n        <div class=\\\"select is-fullwidth\\\">\\r\\n            <select [disabled]=\\\"read_only\\\" [(ngModel)]=\\\"selected.fkInstitucion\\\">\\r\\n                <option *ngFor=\\\"let item of list_institucion;\\\" [ngValue]=\\\"item\\\">{{item.nombre}}</option>\\r\\n            </select>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"field\\\">\\r\\n    <label class=\\\"label\\\">Cartas</label>\\r\\n    <div *ngIf=\\\"!read_only\\\" class=\\\"control\\\">\\r\\n        <a (click)=\\\"modal_carta_visible = true;\\\" class=\\\"button is-primary\\\">\\r\\n            <span class=\\\"icon\\\">\\r\\n                <i class=\\\"fas fa-plus\\\"></i>\\r\\n            </span>\\r\\n        </a>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"selected.fkCarta\\\" class=\\\"control\\\">\\r\\n        <table class=\\\"table is-striped is-fullwidth\\\">\\r\\n            <caption>\\r\\n                {{selected.fkCarta.destinatario}}\\r\\n            </caption>\\r\\n\\r\\n            <tbody>\\r\\n                <tr *ngFor=\\\"let item of selected.fkCarta.detalleCartaList\\\">\\r\\n                    <td>\\r\\n                        {{item.dirigidoA}}\\r\\n                    </td>\\r\\n                    <td>\\r\\n                        <div class=\\\"buttons\\\">\\r\\n                            <a (click)=\\\"dodownload(item,'privado')\\\" class=\\\"button is-primary\\\">\\r\\n                                <span class=\\\"icon\\\">\\r\\n                                    <i class=\\\"fas fa-download\\\"></i>\\r\\n                                </span>\\r\\n                                <span>Privado</span>\\r\\n                            </a>\\r\\n                            <a (click)=\\\"dodownload(item,'practica')\\\" class=\\\"button is-info\\\">\\r\\n                                <span class=\\\"icon\\\">\\r\\n                                    <i class=\\\"fas fa-download\\\"></i>\\r\\n                                </span>\\r\\n                                <span>Práctica supervisada</span>\\r\\n                            </a>\\r\\n                            <a (click)=\\\"dodownload(item,'protocolo')\\\" class=\\\"button is-link\\\">\\r\\n                                <span class=\\\"icon\\\">\\r\\n                                    <i class=\\\"fas fa-download\\\"></i>\\r\\n                                </span>\\r\\n                                <span>Anteproyecto</span>\\r\\n                            </a>\\r\\n                        </div>\\r\\n                    </td>\\r\\n                </tr>\\r\\n            </tbody>\\r\\n        </table>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div [ngClass]=\\\"{'is-active': modal_carta_visible }\\\" class=\\\"modal\\\">\\r\\n    <div class=\\\"modal-background\\\"></div>\\r\\n    <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"box\\\">\\r\\n            <carta (selected)=\\\"selected.fkCarta = $event; modal_carta_visible = false;\\\" es-selector=\\\"true\\\"></carta>\\r\\n        </div>\\r\\n    </div>\\r\\n    <button (click)=\\\"modal_carta_visible = false;\\\" class=\\\"modal-close is-large\\\" aria-label=\\\"close\\\"></button>\\r\\n</div>\\r\\n\\r\\n\\r\\n<div class=\\\"field\\\">\\r\\n    <label for=\\\"\\\" class=\\\"label\\\">Asesor</label>\\r\\n    <div class=\\\"control\\\">\\r\\n        <input [readonly]=\\\"read_only\\\" [(ngModel)]=\\\"selected.asesor\\\" type=\\\"text\\\" class=\\\"input\\\">\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<div class=\\\"field\\\">\\r\\n    <label for=\\\"\\\" class=\\\"label\\\">Asesor supervisor</label>\\r\\n    <div class=\\\"control\\\">\\r\\n        <input [readonly]=\\\"read_only\\\" [(ngModel)]=\\\"selected.asesorSupervisor\\\" type=\\\"text\\\" class=\\\"input\\\">\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"field\\\">\\r\\n    <label for=\\\"\\\" class=\\\"label\\\">Supervisor</label>\\r\\n    <div class=\\\"control\\\">\\r\\n        <input [readonly]=\\\"read_only\\\" [(ngModel)]=\\\"selected.supervisor\\\" type=\\\"text\\\" class=\\\"input\\\">\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<div *ngIf=\\\"hay_contenido\\\" class=\\\"columns\\\">\\r\\n    <div class=\\\"column is-4\\\">\\r\\n        <button (click)=\\\"dodel()\\\" *ngIf=\\\"read_only\\\" class=\\\"button is-danger is-fullwidth\\\">\\r\\n            <span class=\\\"icon\\\">\\r\\n                <i class=\\\"fas fa-trash\\\"></i>\\r\\n            </span>\\r\\n            <span>Eliminar</span>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"column is-4\\\">\\r\\n        <button (click)=\\\"docancel()\\\" *ngIf=\\\"!read_only\\\" class=\\\"button is-fullwidth\\\">\\r\\n            <span class=\\\"icon\\\">\\r\\n                <i class=\\\"fas fa-ban\\\"></i>\\r\\n            </span>\\r\\n            <span>Cancelar</span>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"column is-4\\\">\\r\\n        <button (click)=\\\"read_only = false\\\" *ngIf=\\\"read_only\\\" class=\\\"button is-info is-fullwidth\\\">\\r\\n            <span class=\\\"icon\\\">\\r\\n                <i class=\\\"fas fa-edit\\\"></i>\\r\\n            </span>\\r\\n            <span>Editar</span>\\r\\n        </button>\\r\\n\\r\\n        <button (click)=\\\"doupt()\\\" *ngIf=\\\"!read_only\\\" [disabled]=\\\"!upt_ready\\\" class=\\\"button is-success is-fullwidth\\\">\\r\\n            <span class=\\\"icon\\\">\\r\\n                <i class=\\\"fas fa-save\\\"></i>\\r\\n            </span>\\r\\n            <span>Guardar</span>\\r\\n        </button>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"has-text-right\\\">\\r\\n    <button (click)=\\\"docreate()\\\" [disabled]=\\\"!upt_ready\\\" *ngIf=\\\"!hay_contenido\\\" class=\\\"button is-primary\\\">\\r\\n        <span class=\\\"icon\\\">\\r\\n            <i class=\\\"fas fa-plus\\\"></i>\\r\\n        </span>\\r\\n        <span>Crear</span>\\r\\n    </button>\\r\\n\\r\\n</div>\"","export default \"<table class=\\\"table is-fullwidth is-striped\\\">\\r\\n    <caption>\\r\\n        {{list.length}} incorporacion(es)\\r\\n    </caption>\\r\\n    <thead>\\r\\n        <tr>\\r\\n            <th>Correlativo</th>\\r\\n            <th>Fecha inicio</th>\\r\\n            <th>Fecha final</th>\\r\\n            <th>Duración</th>\\r\\n        </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n        <tr *ngFor=\\\"let item of list\\\">\\r\\n            <td>\\r\\n                <a [routerLink]=\\\"['./',item.idIncorporacion]\\\" class=\\\"button is-text\\\">\\r\\n                    {{item.correlativoDoc}}\\r\\n                </a>\\r\\n            </td>\\r\\n            <td>{{item.fechaInicio}}</td>\\r\\n            <td>{{item.fechaFinal}}</td>\\r\\n            <td>{{item.tiempoEps}}</td>\\r\\n            <!-- <td>\\r\\n                <div class=\\\"buttons\\\">\\r\\n                    <a target=\\\"__blank\\\" href=\\\"../../../assets/cartas/Privado.docx\\\" class=\\\"button is-primary\\\">\\r\\n                        <span class=\\\"icon\\\">\\r\\n                            <i class=\\\"fas fa-download\\\"></i>\\r\\n                        </span>\\r\\n                        <span>Privado</span>\\r\\n                    </a>\\r\\n                    <a target=\\\"__blank\\\" href=\\\"../../../assets/cartas/Protocolo.docx\\\" class=\\\"button is-info\\\">\\r\\n                        <span class=\\\"icon\\\">\\r\\n                            <i class=\\\"fas fa-download\\\"></i>\\r\\n                        </span>\\r\\n                        <span>Anteproyecto</span>\\r\\n                    </a>\\r\\n                    <a target=\\\"__blank\\\" href=\\\"../../../assets/cartas/Practicas.docx\\\" class=\\\"button is-link\\\">\\r\\n                        <span class=\\\"icon\\\">\\r\\n                            <i class=\\\"fas fa-download\\\"></i>\\r\\n                        </span>\\r\\n                        <span>Prácticas supervisada</span>\\r\\n                    </a>\\r\\n                </div>\\r\\n            </td> -->\\r\\n        </tr>\\r\\n    </tbody>\\r\\n\\r\\n</table>\\r\\n\\r\\n<div class=\\\"buttons is-large\\\">\\r\\n    <a [routerLink]=\\\"['./',0]\\\" routerLinkActive=\\\"router-link-active\\\" class=\\\"button is-primary\\\">\\r\\n        <span class=\\\"icon\\\">\\r\\n            <i class=\\\"fas fa-plus\\\"></i>\\r\\n        </span>\\r\\n        <span>Crear</span>\\r\\n    </a>\\r\\n</div>\"","export default \"\\r\\n<div class=\\\"columns\\\" style=\\\"align-items: flex-end;\\\">\\r\\n    <div class=\\\"column\\\">\\r\\n        <div class=\\\"field\\\">\\r\\n            <label class=\\\"label\\\">Buscar carnet:</label>\\r\\n            <div class=\\\"control\\\">\\r\\n                <input [(ngModel)]=\\\"selected.carnet\\\" type=\\\"text\\\" class=\\\"input\\\" autofocus>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"column is-3\\\">\\r\\n        <a [routerLink]=\\\"['/estudiante', 0]\\\" class=\\\"button is-primary is-fullwidth\\\">\\r\\n            <span class=\\\"icon\\\">\\r\\n                <i class=\\\"fas fa-plus\\\"></i>\\r\\n            </span>\\r\\n            <span>\\r\\n                Nuevo\\r\\n            </span>\\r\\n        </a>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<table class=\\\"table is-fullwidth is-striped\\\">\\r\\n    <caption>\\r\\n        {{list.length}} estudiante(s)\\r\\n    </caption>\\r\\n    <thead>\\r\\n        <tr>\\r\\n            <th>Carnet</th>\\r\\n            <th>CUI</th>\\r\\n            <th>Nombre</th>\\r\\n        </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n        <tr *ngFor=\\\"let item of list\\\">\\r\\n            <td>\\r\\n                <a [routerLink]=\\\"['/estudiante', item.carnet]\\\" class=\\\"button is-text\\\">\\r\\n                    {{item.carnet}}\\r\\n                </a>\\r\\n            </td>\\r\\n            <td>{{item.cui}}</td>\\r\\n            <td>{{item.nombre}}</td>\\r\\n        </tr>\\r\\n    </tbody>\\r\\n</table>\"","export default \"<table class=\\\"table is-striped is-fullwidth\\\">\\r\\n    <caption>\\r\\n        Incorporaciones activas: <strong>{{incorporacion_list.length}}</strong>\\r\\n    </caption>\\r\\n    <thead>\\r\\n        <th>Correlativo</th>\\r\\n        <th>Estudiante</th>\\r\\n        <th>Carrera</th>\\r\\n        <th>Institución</th>\\r\\n        <th>Fecha finalización</th>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n        <tr *ngFor=\\\"let item of incorporacion_list\\\">\\r\\n            <td>\\r\\n                <a [routerLink]=\\\"['/estudiante', item.fkEstudianteCarnet.carnet, 'incorporaciones',item.idIncorporacion]\\\"\\r\\n                    routerLinkActive=\\\"router-link-active\\\" class=\\\"button is-text\\\">\\r\\n                    {{item.correlativoDoc}}\\r\\n                </a>\\r\\n            </td>\\r\\n            <td>{{item.fkEstudianteCarnet.carnet}}</td>\\r\\n            <td>\\r\\n                {{\\r\\n                item.fkEstudianteCarnet.estudianteCarreraList \\r\\n                && item.fkEstudianteCarnet.estudianteCarreraList[0]\\r\\n                && item.fkEstudianteCarnet.estudianteCarreraList[0].fkCarrera\\r\\n                && item.fkEstudianteCarnet.estudianteCarreraList[0].fkCarrera.nombre\\r\\n                    || \\\"\\\"\\r\\n            }}\\r\\n            </td>\\r\\n            <td>{{item.fkInstitucion.nombre}}</td>\\r\\n            <td>{{item.fechaFinal}}</td>\\r\\n        </tr>\\r\\n    </tbody>\\r\\n</table>\"","export default \"<div class=\\\"control has-text-right\\\">\\r\\n    <a [routerLink]=\\\"['/institucion']\\\" class=\\\"button\\\">\\r\\n        <span class=\\\"icon\\\">\\r\\n            <i class=\\\"fas fa-times\\\"></i>\\r\\n        </span>\\r\\n        <span>Cerrar</span>\\r\\n    </a>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"columns\\\" style=\\\"align-items: flex-end;\\\">\\r\\n    <div class=\\\"column\\\">\\r\\n        <div class=\\\"field\\\">\\r\\n            <label class=\\\"label\\\">Nombre:</label>\\r\\n            <div class=\\\"control\\\">\\r\\n                <input [readonly]=\\\"read_only\\\" type=\\\"text\\\" class=\\\"input\\\" [(ngModel)]=\\\"selected.nombre\\\">\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"column is-3\\\">\\r\\n        <div *ngIf=\\\"hay_contenido\\\" class=\\\"columns\\\">\\r\\n            <div class=\\\"column is-4\\\">\\r\\n                <button *ngIf=\\\"!read_only\\\" (click)=\\\"docancel()\\\" class=\\\"button is-fullwidth\\\">\\r\\n                    <span class=\\\"icon\\\">\\r\\n                        <i class=\\\"fas fa-ban\\\"></i>\\r\\n                    </span>\\r\\n                </button>\\r\\n                <button *ngIf=\\\"read_only\\\" (click)=\\\"dodel()\\\" class=\\\"button is-danger is-fullwidth\\\">\\r\\n                    <span class=\\\"icon\\\">\\r\\n                        <i class=\\\"fas fa-trash\\\"></i>\\r\\n                    </span>\\r\\n                </button>\\r\\n            </div>\\r\\n            <div class=\\\"column\\\">\\r\\n                <button *ngIf=\\\"read_only\\\" (click)=\\\"read_only = false\\\" class=\\\"button is-info is-fullwidth\\\">\\r\\n                    <span class=\\\"icon\\\">\\r\\n                        <i class=\\\"fas fa-edit\\\"></i>\\r\\n                    </span>\\r\\n                    <span>Editar</span>\\r\\n                </button>\\r\\n\\r\\n                <button *ngIf=\\\"!read_only\\\" (click)=\\\"doupt()\\\" [disabled]=\\\"!upt_ready\\\"\\r\\n                    class=\\\"button is-success is-fullwidth\\\">\\r\\n                    <span class=\\\"icon\\\">\\r\\n                        <i class=\\\"fas fa-save\\\"></i>\\r\\n                    </span>\\r\\n                    <span>Guardar</span>\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n        <button *ngIf=\\\"!hay_contenido\\\" (click)=\\\"docreate()\\\" [disabled]=\\\"!upt_ready\\\"\\r\\n            class=\\\"button is-primary is-fullwidth\\\">\\r\\n            <span class=\\\"icon\\\">\\r\\n                <i class=\\\"fas fa-plus\\\"></i>\\r\\n            </span>\\r\\n            <span>Crear</span>\\r\\n        </button>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<table class=\\\"table is-striped is-fullwidth\\\">\\r\\n    <caption>\\r\\n        {{list.length}} detalle(s)\\r\\n    </caption>\\r\\n    <thead>\\r\\n        <tr>\\r\\n            <th style=\\\"width: 25%;;\\\">Teléfono</th>\\r\\n            <th>Ubicación</th>\\r\\n        </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n        <tr *ngFor=\\\"let item of list; let index = index;\\\">\\r\\n            <td>\\r\\n                <div class=\\\"control\\\">\\r\\n                    <input [readonly]=\\\"read_only\\\" type=\\\"number\\\" min=\\\"0\\\" class=\\\"input\\\" [(ngModel)]=\\\"item.telefono\\\">\\r\\n                </div>\\r\\n            </td>\\r\\n            <td>\\r\\n                <div class=\\\"control\\\">\\r\\n                    <input [readonly]=\\\"read_only\\\" type=\\\"text\\\" class=\\\"input\\\" [(ngModel)]=\\\"item.ubicacion\\\">\\r\\n                </div>\\r\\n            </td>\\r\\n            <td *ngIf=\\\"!read_only\\\">\\r\\n                <button (click)=\\\"list.splice(index,1)\\\" class=\\\"is-danger button is-fullwidth\\\">\\r\\n                    <span class=\\\"icon\\\">\\r\\n                        <i class=\\\"fas fa-times\\\"></i>\\r\\n                    </span>\\r\\n                </button>\\r\\n            </td>\\r\\n        </tr>\\r\\n    </tbody>\\r\\n</table>\\r\\n\\r\\n<button *ngIf=\\\"!read_only\\\" (click)=\\\"doadd()\\\" class=\\\"is-primary button\\\">\\r\\n    <span class=\\\"icon\\\">\\r\\n        <i class=\\\"fas fa-plus\\\"></i>\\r\\n    </span>\\r\\n</button>\"","export default \"<div class=\\\"select is-fullwidth\\\">\\r\\n    <select [(ngModel)]=\\\"selected\\\">\\r\\n        <option *ngFor=\\\"let item of list;\\\" [ngValue]=\\\"item\\\">{{item.nombre}}</option>\\r\\n    </select>\\r\\n</div>\\r\\n\\r\\n<!-- <table class=\\\"table is-fullwidth is-striped\\\">\\r\\n    <tbody>\\r\\n        <tr *ngFor=\\\"let item of []; let index = index;\\\">\\r\\n            <td>\\r\\n                {{index + 1}}.\\r\\n                {{item.fkCarrera.nombre}}\\r\\n            </td>\\r\\n            <td *ngIf=\\\"!read_only\\\" style=\\\"width: 15%;\\\">\\r\\n                <button (click)=\\\"selected.estudianteCarreraList.splice(index,1)\\\" class=\\\"is-danger button is-fullwidth\\\">\\r\\n                    <span class=\\\"icon\\\">\\r\\n                        <i class=\\\"fas fa-times\\\"></i>\\r\\n                    </span>\\r\\n                </button>\\r\\n            </td>\\r\\n        </tr>\\r\\n        <tr *ngIf=\\\"!read_only\\\">\\r\\n            <td>\\r\\n                <div class=\\\"control\\\">\\r\\n                    <div class=\\\"select is-fullwidth\\\">\\r\\n                        <select [(ngModel)]=\\\"carrera_selected\\\">\\r\\n                            <option *ngFor=\\\"let item of list\\\" [ngValue]=\\\"item\\\">\\r\\n                                {{item.nombre}}\\r\\n                            </option>\\r\\n                        </select>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </td>\\r\\n            <td>\\r\\n                <button type=\\\"button\\\" [disabled]=\\\"!carrera_selected\\\" (click)=\\\"add_carrera(carrera_selected)\\\"\\r\\n                    class=\\\"button is-primary is-fullwidth\\\">\\r\\n                    <span class=\\\"icon\\\">\\r\\n                        <i class=\\\"fas fa-plus\\\"></i>\\r\\n                    </span>\\r\\n                </button>\\r\\n            </td>\\r\\n        </tr>\\r\\n    </tbody>\\r\\n</table> -->\"","export default \"\\r\\n<div class=\\\"columns\\\" style=\\\"align-items: flex-end;\\\">\\r\\n    <div class=\\\"column\\\">\\r\\n        <div class=\\\"field \\\">\\r\\n            <label class=\\\"label\\\">Buscar</label>\\r\\n            <div class=\\\"control is-expanded\\\">\\r\\n                <input autofocus [(ngModel)]=\\\"selected.nombre\\\" type=\\\"text\\\" class=\\\"input\\\">\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"column is-3\\\">\\r\\n        <div class=\\\"control\\\">\\r\\n            <a [routerLink]=\\\"['/institucion/0']\\\" type=\\\"button\\\" class=\\\"button is-primary is-fullwidth\\\">\\r\\n                <span class=\\\"icon\\\">\\r\\n                    <i class=\\\"fas fa-plus\\\"></i>\\r\\n                </span>\\r\\n                <span>Crear</span>\\r\\n            </a>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"notification is-danger\\\" *ngFor=\\\"let item of list_error\\\">{{item}}</div>\\r\\n\\r\\n<table class=\\\"table is-fullwidth is-striped\\\">\\r\\n    <caption>{{list.length}} institucione(s)</caption>\\r\\n    <thead>\\r\\n        <tr>\\r\\n            <th>Nombre</th>\\r\\n        </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n        <tr *ngFor=\\\"let item of list; let index = index;\\\">\\r\\n            <td>\\r\\n                <a routerLink=\\\"{{item.idInstitucion}}\\\" class=\\\"button is-text\\\">{{item.nombre}}</a>\\r\\n            </td>\\r\\n        </tr>\\r\\n    </tbody>\\r\\n</table>\"","export default \"<nav class=\\\"level\\\" style=\\\"margin-bottom: 25px;\\\">\\r\\n    <p class=\\\"level-item has-text-centered\\\">\\r\\n        <a class=\\\"button is-white\\\" [routerLink]=\\\"['/panel']\\\" routerLinkActive=\\\"is-active\\\">Home</a>\\r\\n    </p>\\r\\n    <p class=\\\"level-item has-text-centered\\\">\\r\\n        <a class=\\\"button is-white\\\" [routerLink]=\\\"['/estudiante']\\\" routerLinkActive=\\\"is-active\\\">\\r\\n            Estudiantes\\r\\n        </a>\\r\\n    </p>\\r\\n    <p class=\\\"level-item has-text-centered\\\">\\r\\n        <a class=\\\"button is-white\\\" [routerLink]=\\\"['/institucion']\\\" routerLinkActive=\\\"is-active\\\">\\r\\n            Insituciones\\r\\n        </a>\\r\\n    </p>\\r\\n    <p class=\\\"level-item has-text-centered\\\">\\r\\n        <a class=\\\"button is-white\\\" [routerLink]=\\\"['/carreras']\\\" routerLinkActive=\\\"is-active\\\">\\r\\n            Carreras\\r\\n        </a>\\r\\n    </p>\\r\\n    <p class=\\\"level-item has-text-centered\\\">\\r\\n        <a class=\\\"button is-white\\\" [routerLink]=\\\"['/cartas']\\\" routerLinkActive=\\\"is-active\\\">\\r\\n            Cartas\\r\\n        </a>\\r\\n    </p>\\r\\n</nav>\"","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { InstitucionComponent } from \"./institucion/institucion.component\";\r\nimport { PanelInicioComponent } from \"./inicio-panel/inicio-panel.component\";\r\nimport { EstudianteComponent } from \"./estudiante/estudiante.component\";\r\nimport { InstitucionDetalleComponent } from './institucion-detalle/institucion-detalle.component';\r\nimport EstudianteDetalleComponent from './estudiante-detalle/estudiante-detalle.component';\r\nimport EstudianteDetalleDatosComponent from './estudiante-detalle/datos/datos.component';\r\nimport EstudianteIncorporacionesComponent from './estudiante-detalle/incorporaciones/incorporaciones';\r\nimport CarreraComponent from './carrera/carrera.component';\r\nimport { CarreraDetalleComponent } from './carrera-detalle/carrera-detalle.component';\r\nimport EstudianteIncorporacionDetalleComponent from './estudiante-detalle/incorporaciones/detalle/detalle';\r\nimport { CartaComponent } from './carta/carta';\r\nimport { CartaDetalleComponent } from './carta-detalle/carta-detalle';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"institucion\"\r\n    , component: InstitucionComponent\r\n  }\r\n  , {\r\n    path: \"institucion/:idInstitucion\"\r\n    , component: InstitucionDetalleComponent\r\n  }\r\n  , {\r\n    path: \"cartas\"\r\n    , component: CartaComponent\r\n  }\r\n  , {\r\n    path: \"cartas/:idCarta\"\r\n    , component: CartaDetalleComponent\r\n  }\r\n  , {\r\n    path: \"\"\r\n    , pathMatch: \"full\"\r\n    , redirectTo: \"panel\"\r\n  }\r\n  , {\r\n    path: \"panel\"\r\n    , component: PanelInicioComponent\r\n  }\r\n  , {\r\n    path: \"estudiante\"\r\n    , component: EstudianteComponent\r\n  }\r\n  , {\r\n    path: \"estudiante/:carnet\"\r\n    , component: EstudianteDetalleComponent\r\n    , children: [\r\n      {\r\n        path: \"\"\r\n        , pathMatch: \"full\"\r\n        , redirectTo: \"datos\"\r\n      }\r\n      , {\r\n        path: \"datos\"\r\n        , component: EstudianteDetalleDatosComponent\r\n      }\r\n      , {\r\n        path: \"incorporaciones\"\r\n        , component: EstudianteIncorporacionesComponent\r\n      }\r\n      , {\r\n        path: \"incorporaciones/:id\"\r\n        , component: EstudianteIncorporacionDetalleComponent\r\n      }\r\n    ]\r\n  }\r\n  , {\r\n    path: \"carreras\"\r\n    , component: CarreraComponent\r\n  }\r\n  , {\r\n    path: \"carreras/:id\"\r\n    , component: CarreraDetalleComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\nimport { MensajeService } from \"./mensaje.service\";\r\nimport { BodyResponse } from './modelos';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html'\r\n})\r\nexport class AppComponent {\r\n  title = 'practicas-intermedias-eps-js';\r\n\r\n  constructor(public mensajes: MensajeService) { }\r\n}\r\n\r\nexport interface SimpleListAppInterface<T> {\r\n  body: BodyResponse<T[]>;\r\n}","import { Injectable } from '@angular/core';\r\nimport { finalize, catchError, tap } from \"rxjs/operators\";\r\nimport { MensajeService } from \"./mensaje.service\";\r\n\r\nimport {\r\n    HttpErrorResponse,\r\n    HttpEvent, HttpInterceptor, HttpHandler, HttpRequest, HttpResponse\r\n} from '@angular/common/http';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport { BodyResponse } from './modelos';\r\n\r\n/** Pass untouched request through to the next request handler. */\r\n@Injectable()\r\nexport class AppInterceptor implements HttpInterceptor {\r\n\r\n    constructor(private mensajes: MensajeService) {\r\n\r\n    }\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n        const self = this;\r\n        self.mensajes.loading = true;\r\n        return next.handle(req).pipe(\r\n            finalize(() => self.mensajes.loading = false)\r\n            , tap((event: HttpResponse<BodyResponse<any>>) => {\r\n                const body = event && event.body;\r\n                if (body) {\r\n                    const err = body && body.error;\r\n                    if (err) {\r\n                        self.mensajes.create_danger(err && err.Message || err);\r\n                    }\r\n                }\r\n            }, (event: HttpErrorResponse) => {\r\n                self.mensajes.create_danger(event.message);\r\n            })\r\n        );\r\n    }\r\n}\r\n\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { NgbDatepickerModule } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { InstitucionComponent } from './institucion/institucion.component';\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { EstudianteComponent } from './estudiante/estudiante.component';\r\nimport EstudianteDetalleComponent from './estudiante-detalle/estudiante-detalle.component';\r\nimport { PanelInicioComponent } from './inicio-panel/inicio-panel.component';\r\nimport { InstitucionDetalleComponent } from './institucion-detalle/institucion-detalle.component';\r\nimport { AppInterceptor } from \"./app.interceptor\"\r\nimport EstudianteDetalleDatosComponent from './estudiante-detalle/datos/datos.component';\r\nimport EstudianteIncorporacionesComponent from './estudiante-detalle/incorporaciones/incorporaciones';\r\nimport CarreraComponent from './carrera/carrera.component';\r\nimport { CarreraDetalleComponent } from './carrera-detalle/carrera-detalle.component';\r\nimport EstudianteIncorporacionDetalleComponent from './estudiante-detalle/incorporaciones/detalle/detalle';\r\nimport { SimpleMenuComponent } from './menu/simple';\r\nimport { InstitucionListComponent } from './institucion/InstitucionList';\r\nimport { CartaComponent } from './carta/carta';\r\nimport { CartaDetalleComponent } from './carta-detalle/carta-detalle';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    InstitucionComponent,\r\n    EstudianteComponent,\r\n    EstudianteDetalleComponent,\r\n    PanelInicioComponent,\r\n    InstitucionDetalleComponent\r\n    , EstudianteDetalleDatosComponent\r\n    , EstudianteIncorporacionesComponent\r\n    , EstudianteIncorporacionDetalleComponent\r\n    , CarreraComponent\r\n    , CarreraDetalleComponent\r\n    , SimpleMenuComponent\r\n    , InstitucionListComponent\r\n    , CartaComponent\r\n    , CartaDetalleComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule\r\n    , AppRoutingModule\r\n    , FormsModule\r\n    , HttpClientModule\r\n    , NgbDatepickerModule\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: HTTP_INTERCEPTORS, useClass: AppInterceptor, multi: true\r\n    }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BodyResponse, Estudiante } from './modelos';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class AppService<T> {\r\n  baseurl = \"/eps-app/rest/\";\r\n  name = \"name\"\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  controller_url(id : any = \"\") {\r\n    const self = this;\r\n    return self.baseurl + self.name + \"/\" + id\r\n  }\r\n\r\n  sel(params?) {\r\n    const self = this;\r\n    return self.http.get<BodyResponse<T[]>>(self.controller_url(), { params }).toPromise();\r\n  }\r\n\r\n  create(data: T, params?) {\r\n    const self = this;\r\n    return this.http.post<BodyResponse<T>>(self.controller_url(), data, { params }).toPromise();\r\n  }\r\n\r\n  del(id: number) {\r\n    const self = this;\r\n    return this.http.delete<BodyResponse<T>>(self.controller_url(id)).toPromise();\r\n  }\r\n\r\n  upt(id: number, data: T, params?) {\r\n    const self = this;\r\n    return this.http.put<BodyResponse<T>>(self.controller_url(id), data, { params }).toPromise();\r\n  }\r\n\r\n  get(id: Number) {\r\n    const self = this;\r\n    return self.http.get<BodyResponse<T>>(self.controller_url(id)).toPromise();\r\n  }\r\n}\r\n\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { CarreraService } from '../carrera.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { BodyResponse, Carrera } from '../modelos';\r\nimport { MensajeService } from '../mensaje.service';\r\n\r\n@Component({\r\n    selector: \"carrera-detalle\"\r\n    , templateUrl: \"./carrera-detalle.component.html\"\r\n})\r\n\r\nexport class CarreraDetalleComponent implements OnInit {\r\n    constructor(\r\n        private carreras: CarreraService\r\n        , private active_route: ActivatedRoute\r\n        , private router: Router\r\n        , private mensajes: MensajeService\r\n    ) { }\r\n    ngOnInit() {\r\n        const self = this;\r\n        self.active_route.params.subscribe(params => self.doget(params.id));\r\n    }\r\n\r\n    body = new BodyResponse<Carrera>();\r\n\r\n    get selected() {\r\n        const self = this;\r\n        if (self.body.data === null) {\r\n            self.body.data = new Carrera();\r\n        }\r\n        return this.body.data;\r\n    }\r\n\r\n    get hay_contenido() {\r\n        const self = this;\r\n        return self.body.total > 0 && self.selected.codigoCarrera > 0;\r\n    }\r\n    async doget(id) {\r\n        const self = this;\r\n        self.body = await self.carreras.get(id);\r\n    }\r\n\r\n    get upt_ready() {\r\n        const self = this;\r\n        return self.selected.codigoCarrera > 0 && self.selected.nombre.trim().length > 0;\r\n    }\r\n    async doupt() {\r\n        const self = this;\r\n\r\n        if (window.confirm(\"Guardar?\")) {\r\n            const body = await self.carreras.upt(self.selected.codigoCarrera, { ...self.selected });\r\n            if (body.total > 0) {\r\n                self.mensajes.create_info(\"Guardado...\");\r\n                window.scroll(0, 0);\r\n            }\r\n        }\r\n    }\r\n    async docreate() {\r\n        const self = this;\r\n        const body = await self.carreras.create({ ...self.selected });\r\n\r\n        if (body.data && body.data.codigoCarrera > 0) {\r\n            self.mensajes.create_info(\"Creado...\");\r\n            self.router.navigate([\"/carreras\", body.data.codigoCarrera]);\r\n            window.scroll(0, 0);\r\n        }\r\n    }\r\n    async dodel() {\r\n        const self = this;\r\n        if (window.confirm(\"Eliminar?\")) {\r\n            const body = await self.carreras.del(self.selected.codigoCarrera);\r\n            if (body.total > 0) {\r\n                self.mensajes.create_info(\"Eliminado...\");\r\n                self.router.navigate([\"/carreras\"]);\r\n                window.scroll(0, 0);\r\n            }\r\n        }\r\n    }\r\n    docancel() {\r\n        const self = this;\r\n        self.router.navigate([\"/carreras\"]);\r\n    }\r\n\r\n}\r\n","import { AppService } from './app.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { Carrera, BodyResponse } from './modelos';\r\n\r\n@Injectable({\r\n    providedIn: \"root\"\r\n})\r\n\r\nexport class CarreraService extends AppService<Carrera> {\r\n    name = \"carreras\"\r\n\r\n    // sel(params?) {\r\n    //     return new Promise<BodyResponse<Carrera[]>>((resolve) => {\r\n    //         const body = new BodyResponse<Carrera[]>();\r\n    //         body.data = [ new Carrera()];\r\n    //         body.data[0].nombre = \"ejemplo\";\r\n    //         resolve(body);\r\n    //     });\r\n    // }\r\n}\r\n\r\n\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { CarreraService } from '../carrera.service';\r\nimport { BodyResponse, Carrera } from '../modelos';\r\n\r\n@Component({\r\n    selector: \"app-carrera\"\r\n    , templateUrl: \"./carrera.component.html\"\r\n})\r\n\r\nexport default class CarreraComponent implements OnInit {\r\n\r\n    constructor(\r\n        private carreras: CarreraService\r\n    ) { }\r\n\r\n\r\n    ngOnInit() {\r\n        this.dosel();\r\n    }\r\n\r\n    get list() {\r\n        const self = this;\r\n        return (self.body.data || []).filter(item => item.nombre.toLocaleLowerCase().indexOf(self.selected.nombre.toLocaleLowerCase()) >= 0)\r\n    }\r\n\r\n    body = new BodyResponse<Carrera[]>();\r\n    selected = new Carrera();\r\n    async dosel() {\r\n        const self = this;\r\n        self.body = await self.carreras.sel();\r\n    }\r\n\r\n\r\n}","import { Component, OnInit, Input } from \"@angular/core\";\r\nimport { CartaService } from '../carta.service';\r\nimport { BodyResponse, Carta, CartaDetalle } from '../modelos';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { MensajeService } from '../mensaje.service';\r\n\r\n\r\n@Component({\r\n    selector: \"carta-detalle\"\r\n    , templateUrl: \"./carta-detalle.html\"\r\n})\r\n\r\nexport class CartaDetalleComponent implements OnInit {\r\n    constructor(\r\n        private cartas: CartaService\r\n        , private route: ActivatedRoute\r\n        , private mensajes: MensajeService\r\n        , private router: Router\r\n    ) {\r\n    }\r\n\r\n    read_only = true;\r\n\r\n    get upt_ready() {\r\n        const self = this;\r\n        const has_nombre = self.selected.destinatario.trim().length > 0;\r\n\r\n        const has_detalle = self.selected.detalleCartaList.length > 0\r\n            && -1 === self.selected.detalleCartaList.findIndex(item => {\r\n                return item.cargo.trim().length === 0 || item.dirigidoA.trim().length === 0\r\n            });\r\n\r\n        return has_nombre && has_detalle;\r\n    }\r\n\r\n    async ngOnInit() {\r\n        const self = this;\r\n        self.route.params.subscribe(params => self.doget(params.idCarta));\r\n    }\r\n    async doget(idCarta: number) {\r\n        const self = this;\r\n        if (idCarta > 0) {\r\n            self.body = await self.cartas.get(idCarta);\r\n        } else {\r\n            self.read_only = false;\r\n            self.body.data = new Carta();\r\n        }\r\n    }\r\n\r\n    get selected() {\r\n        const self = this;\r\n        return self.body.data || new Carta();\r\n    }\r\n\r\n    get hay_contenido() {\r\n        const self = this;\r\n        return self.body.total > 0 && self.body.data && self.body.data.idCarta > 0 || false;\r\n    }\r\n\r\n    body = new BodyResponse<Carta>();\r\n    get list() {\r\n        const self = this;\r\n        return self.body && self.body.data || [];\r\n    }\r\n\r\n    doadd_detalle() {\r\n        const self = this;\r\n        self.selected.detalleCartaList.push(new CartaDetalle());\r\n    }\r\n\r\n    async doupt() {\r\n        const self = this;\r\n        if (window.confirm(\"Guardar?\")) {\r\n            const body = await self.cartas.upt(self.selected.idCarta, { ...self.selected });\r\n            if (body.total > 0) {\r\n                self.mensajes.create_info(\"Grupo Guardado\");\r\n            }\r\n        }\r\n    }\r\n    async dodel() {\r\n        const self = this;\r\n        if (window.confirm(\"Eliminar?\")) {\r\n            const body = await self.cartas.del(self.selected.idCarta);\r\n            if (body.total > 0) {\r\n                self.mensajes.create_info(\"Grupo eliminado.\");\r\n                self.router.navigate([\"/cartas\"]);\r\n            }\r\n        }\r\n    }\r\n\r\n    async docreate() {\r\n        const self = this;\r\n        const body = await self.cartas.create({ ...self.selected });\r\n        if (body.total > 0 && body.data && body.data.idCarta > 0) {\r\n            self.mensajes.create_info(\"¡Grupo '\" + body.data.destinatario + \"' creado!\");\r\n        }\r\n    }\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { MensajeService } from \"./mensaje.service\";\r\nimport { BodyResponse, Estudiante, Carta } from './modelos';\r\nimport { AppService } from './app.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CartaService extends AppService<Carta> {\r\n  name = \"cartas\"\r\n\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter } from \"@angular/core\";\r\nimport { CartaService } from '../carta.service';\r\nimport { BodyResponse, Carta } from '../modelos';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n    selector: \"carta\"\r\n    , templateUrl: \"./carta.html\"\r\n})\r\n\r\nexport class CartaComponent implements OnInit {\r\n    constructor(\r\n        private cartas: CartaService\r\n        , private router: Router\r\n    ) {\r\n    }\r\n\r\n    async ngOnInit() {\r\n        const self = this;\r\n\r\n        self.dosel();\r\n    }\r\n\r\n    @Input() selected = new Carta();\r\n    @Input(\"es-selector\") es_selector = false\r\n\r\n    async dosel() {\r\n        const self = this;\r\n        const body = await self.cartas.sel();\r\n\r\n        self.body = body;\r\n    }\r\n\r\n    body = new BodyResponse<Carta[]>();\r\n    get list() {\r\n        const self = this;\r\n        return self.body && self.body.data || [];\r\n    }\r\n    doadd() {\r\n        const self = this;\r\n        self.list.push(new Carta());\r\n    }\r\n\r\n    modal_carta_visible = false;\r\n    @Output(\"selected\") on_selected = new EventEmitter<Carta>();\r\n    watch_selected(to: Carta) {\r\n        const self = this;\r\n        if (to) {\r\n            self.on_selected.emit(to);\r\n        }\r\n    }\r\n}\r\n","import { OnInit, Component } from \"@angular/core\";\r\nimport { Estudiante, BodyResponse, Carrera, estudianteCarreraListItem } from 'src/app/modelos';\r\nimport { EstudianteService } from 'src/app/estudiante.service';\r\nimport { Router, Route, ActivatedRoute } from '@angular/router';\r\nimport { MensajeService } from 'src/app/mensaje.service';\r\nimport { CarreraService } from 'src/app/carrera.service';\r\n\r\n@Component({\r\n    selector: \"estudiante-detalle-datos\"\r\n    , templateUrl: \"./datos.html\"\r\n})\r\n\r\nexport default class EstudianteDetalleDatosComponent implements OnInit {\r\n    constructor(\r\n        private estudiantes: EstudianteService\r\n        , private router: Router\r\n        , private active_route: ActivatedRoute\r\n        , private mensajes: MensajeService\r\n        , private carreras: CarreraService\r\n    ) {\r\n\r\n    }\r\n\r\n    async ngOnInit() {\r\n        const self = this;\r\n        self.active_route.pathFromRoot[1].params.subscribe(params => self.doget(params.carnet));\r\n        self.body_carrera = await self.carreras.sel();\r\n    }\r\n    async doget(carnet: Number) {\r\n        const self = this;\r\n        self.body = await self.estudiantes.get(carnet);\r\n        self.read_only = self.body.data && self.body.data.carnet > 0 || false;\r\n    }\r\n\r\n    body = new BodyResponse<Estudiante>();\r\n    body_carrera = new BodyResponse<Carrera[]>();\r\n\r\n    carrera_selected: Carrera = null;\r\n\r\n    get carrera_list() {\r\n        const self = this;\r\n        return self.body_carrera.data;\r\n    }\r\n\r\n    get selected() {\r\n        const self = this\r\n        if (!self.body.data) {\r\n            self.body.data = new Estudiante();\r\n        }\r\n        return <Estudiante>self.body.data;\r\n    }\r\n    public read_only = true\r\n\r\n    add_carrera(carrera: Carrera) {\r\n        const self = this;\r\n        if (carrera) {\r\n            const item = new estudianteCarreraListItem();\r\n            item.fkCarrera = carrera;\r\n            self.selected.estudianteCarreraList.push(item);\r\n        }\r\n    }\r\n\r\n    // https://stackoverflow.com/a/46181\r\n    email_regex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    get upt_ready() {\r\n        const self = this;\r\n        const has_carnet = self.selected.carnet > 0;\r\n        const has_cui = self.selected.cui > 0;\r\n        const has_nombre = self.selected.nombre.trim().length > 0;\r\n\r\n        let has_email = true;\r\n        const email = self.selected.correo.trim();\r\n        if (email.length > 0) {\r\n            has_email = self.email_regex.test(email);\r\n        }\r\n        // const has_carnet = self.selected.carnet > 0;\r\n        return has_carnet && has_cui && has_nombre && has_email;\r\n    }\r\n\r\n    get hay_contenido() {\r\n        const self = this;\r\n        return self.body.total > 0 && self.selected.carnet > 0;\r\n    }\r\n\r\n    async docreate() {\r\n        const self = this;\r\n\r\n        const body = await self.estudiantes.create({ ...self.selected });\r\n\r\n        const data = <Estudiante>body.data;\r\n        if (data && data.carnet > 0) {\r\n            self.mensajes.create_info(\"Estudiante registrado.\");\r\n            self.router.navigate([\"/estudiante\", data.carnet]);\r\n            window.scroll(0, 0);\r\n        }\r\n\r\n    }\r\n    docancel() {\r\n        window.location.reload();\r\n    }\r\n    async doupt() {\r\n        const self = this;\r\n        const body = await self.estudiantes.upt(self.selected.carnet, { ...self.selected });\r\n\r\n        if (body.total > 0) {\r\n            self.mensajes.create_info(\"Estudiante actualizado\");\r\n            self.read_only = true;\r\n            window.scroll(0, 0);\r\n        }\r\n    }\r\n\r\n    async dodel() {\r\n        const self = this;\r\n        if (window.confirm(\"¿Esta seguro de eliminar?\")) {\r\n            const body = await self.estudiantes.del(self.selected.carnet);\r\n            if (body.total > 0) {\r\n                self.mensajes.create_info(\"Estudiante eliminado\");\r\n                self.router.navigate([\"/estudiante\"]);\r\n                window.scroll(0, 0);\r\n            }\r\n        }\r\n\r\n    }\r\n}\r\n\r\n","import { OnInit, Component } from \"@angular/core\";\r\n\r\n@Component({\r\n    selector: \"app-estudiante-detalle\"\r\n    , templateUrl: \"./estudiante-detalle.component.html\"\r\n})\r\n\r\nexport default class EstudianteDetalleComponent implements OnInit {\r\n\r\n    ngOnInit() {\r\n\r\n    }\r\n}\r\n","import { Component, OnInit, OnChanges, Input, SimpleChange, SimpleChanges, ViewChild, ElementRef } from \"@angular/core\";\r\nimport { MensajeService } from 'src/app/mensaje.service';\r\nimport { ActivatedRoute, Route, Router } from '@angular/router';\r\nimport { IncorporacionService } from 'src/app/incorporacion.service';\r\nimport { BodyResponse, Incorporacion, Estudiante, Institucion, Carta, CartaDetalle } from 'src/app/modelos';\r\nimport { EstudianteService } from 'src/app/estudiante.service';\r\nimport { InstitucionService } from 'src/app/institucion.service';\r\nimport { NgbDateStruct, NgbDateAdapter, NgbDateNativeAdapter } from '@ng-bootstrap/ng-bootstrap';\r\nimport { saveAs } from \"file-saver\";\r\n\r\ndeclare let $: any;\r\ndeclare let PizZipUtils: any;\r\n// https://stackoverflow.com/a/35961176\r\nconst Docxtemplater = require('docxtemplater');\r\nconst PizZip = require(\"pizzip\");\r\n\r\n@Component({\r\n    selector: \"estudiante-incorporacion-detalle\"\r\n    , templateUrl: \"./detalle.html\"\r\n    , providers: [{ provide: NgbDateAdapter, useClass: NgbDateNativeAdapter }]\r\n})\r\n\r\nexport default class EstudianteIncorporacionDetalleComponent implements OnInit, OnChanges {\r\n\r\n    constructor(\r\n        private mensajes: MensajeService\r\n        , private actived_route: ActivatedRoute\r\n        , private incorporaciones: IncorporacionService\r\n        , private estudiantes: EstudianteService\r\n        , private instituciones: InstitucionService\r\n        , private router: Router\r\n    ) { }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        console.log(changes)\r\n    }\r\n    async ngOnInit() {\r\n        const self = this;\r\n        self.dosel_insitucion();\r\n\r\n        self.actived_route.pathFromRoot[1].params.subscribe(params => {\r\n            self.estudiante_doget(params.carnet);\r\n        });\r\n        self.actived_route.pathFromRoot[2].params.subscribe(params => {\r\n            self.doget(params.id);\r\n        });\r\n    }\r\n\r\n    get list_institucion() {\r\n        const self = this;\r\n        return self.body_insitucion && self.body_insitucion.data || [];\r\n    }\r\n\r\n    get selected() {\r\n        const self = this;\r\n        if (!self.body.data) {\r\n            self.body.data = new Incorporacion();\r\n        }\r\n        return self.body.data;\r\n    }\r\n\r\n    body_insitucion = new BodyResponse<Institucion[]>();\r\n    body_estudiante = new BodyResponse<Estudiante>();\r\n    body = new BodyResponse<Incorporacion>()\r\n    public read_only = true;\r\n\r\n    async dosel_insitucion() {\r\n        const self = this;\r\n        self.body_insitucion = await self.instituciones.sel();\r\n    }\r\n\r\n    async estudiante_doget(carnet) {\r\n        const self = this;\r\n        self.body_estudiante = await self.estudiantes.get(carnet);\r\n    }\r\n\r\n    get duracion_eps() {\r\n        const self = this;\r\n        const tf = new Date(self.selected.fechaFinal || null);\r\n        const ti = new Date(self.selected.fechaInicio || null);\r\n\r\n        const dm = tf.getMonth() - ti.getMonth();\r\n        const dy = tf.getFullYear() - ti.getFullYear();\r\n        const diff = 12 * dy + dm;\r\n\r\n        return diff;\r\n    }\r\n\r\n    get duracion_eps_seguro() {\r\n        const self = this;\r\n        const tf = new Date(self.selected.fechaFinalSeguro);\r\n        const ti = new Date(self.selected.fechaInicioSeguro);\r\n\r\n        const dm = tf.getMonth() - ti.getMonth();\r\n        const dy = tf.getFullYear() - ti.getFullYear();\r\n        const diff = 12 * dy + dm;\r\n\r\n        return diff;\r\n    }\r\n\r\n    get upt_ready() {\r\n        const self = this;\r\n        const has_correlativo = self.selected.correlativoDoc > 0;\r\n        const has_fechas = self.duracion_eps > 0;\r\n        const has_asesor = self.selected.asesor.trim().length > 0;\r\n        const has_asesorSupervisor = self.selected.asesorSupervisor.trim().length > 0;\r\n        const has_supervisor = self.selected.supervisor.trim().length > 0;\r\n        const hay_insitucion = !(self.selected.fkInstitucion === undefined || self.selected.fkInstitucion === null)\r\n        const hay_cartas = !(self.selected.fkCarta === undefined || self.selected.fkCarta === null)\r\n\r\n        return hay_cartas && hay_insitucion && has_asesor && has_asesorSupervisor && has_supervisor && has_correlativo && has_fechas;\r\n    }\r\n\r\n    get hay_contenido() {\r\n        const self = this;\r\n        return self.body.total > 0 && self.body.data.idIncorporacion > 0;\r\n    }\r\n\r\n    get estudiante() {\r\n        const self = this;\r\n        return self.body_estudiante && self.body_estudiante.data || new Estudiante();\r\n    }\r\n\r\n    async doget(id: number) {\r\n        const self = this;\r\n        if (id == 0) {\r\n            self.read_only = false;\r\n            self.selected.fkInstitucion = new Institucion();\r\n            self.selected.fkCarta = new Carta();\r\n            return 0;\r\n        }\r\n        self.body = await self.incorporaciones.get(id);\r\n        if (self.body && self.body.data) {\r\n            self.body.data.fechaInicio = new Date(self.body.data.fechaInicio);\r\n            self.body.data.fechaFinal = new Date(self.body.data.fechaFinal);\r\n            self.body.data.fechaInicioSeguro = new Date(self.body.data.fechaInicioSeguro);\r\n            self.body.data.fechaFinalSeguro = new Date(self.body.data.fechaFinalSeguro);\r\n\r\n            if (self.body.data.fkInstitucion) {\r\n                const found = self.list_institucion.find(item => item.idInstitucion = self.body.data.fkInstitucion.idInstitucion);\r\n                if (found) {\r\n                    self.body.data.fkInstitucion = found;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    async dodel() {\r\n        const self = this;\r\n        if (window.confirm(\"¿Eliminar incorporación?\")) {\r\n            const body = await self.incorporaciones.del(self.selected.idIncorporacion);\r\n            if (body.total > 0) {\r\n                self.mensajes.create_info(\"Incorporación eliminada.\");\r\n            }\r\n        }\r\n    }\r\n    async doupt() {\r\n        const self = this;\r\n        const body = await self.incorporaciones.upt(self.selected.idIncorporacion, { ...self.selected });\r\n        self.selected.tiempoEps = self.duracion_eps;\r\n        if (body.total > 0) {\r\n            self.mensajes.create_info(\"Incorporación guardada.\");\r\n            self.read_only = true;\r\n        }\r\n    }\r\n    async docreate() {\r\n        const self = this;\r\n        self.selected.fkEstudianteCarnet = self.body_estudiante.data;\r\n        self.selected.tiempoEps = self.duracion_eps;\r\n        self.selected.fechaIncorporacion = new Date();\r\n        const body = await self.incorporaciones.create({ ...self.selected });\r\n        if (body.data && body.data.idIncorporacion > 0) {\r\n            self.mensajes.create_info(\"Incorporación creada.\");\r\n            self.router.navigate([\"/estudiante\", self.body_estudiante.data.carnet, \"incorporaciones\", body.data.idIncorporacion])\r\n            self.read_only = true;\r\n        }\r\n    }\r\n\r\n    // https://docxtemplater.readthedocs.io/en/latest/generate.html\r\n    // http://www.ludovicperrichon.com/update-docx-with-js-and-optianally-upload-it-to-sp/#replace\r\n    dodownload(detalle: CartaDetalle, tipo = \"privado\") {\r\n        const self = this;\r\n\r\n        const urls = {\r\n            privado: {\r\n                url: \"../../../assets/cartas/Privado.docx\"\r\n            }\r\n            , practica: {\r\n                url: \"../../../assets/cartas/Practicas.docx\"\r\n            }\r\n            , protocolo: {\r\n                url: \"../../../assets/cartas/Protocolo.docx\"\r\n            }\r\n        }\r\n\r\n        PizZipUtils.getBinaryContent(urls[tipo].url, function (error, content) {\r\n            if (error) {\r\n                console.log(error);\r\n                alert(error);\r\n            }\r\n\r\n            var zip = new PizZip(content);\r\n            var doc = new Docxtemplater().loadZip(zip)\r\n            const now = new Date();\r\n            const nombreCarrera = self.estudiante.estudianteCarreraList && self.estudiante.estudianteCarreraList[0] && self.estudiante.estudianteCarreraList[0].fkCarrera.nombre || null;\r\n\r\n            doc.setData({\r\n                dirigidoA: detalle.dirigidoA\r\n                , day: now.getDay()\r\n                , month: now.getMonth()\r\n                , year: now.getFullYear()\r\n                , nombreEstudiante: self.estudiante.nombre\r\n                , dpiEstudiante: self.estudiante.cui\r\n                , carnetEstudiante: self.estudiante.carnet\r\n                , nombreInstitucion: self.selected.fkInstitucion.nombre\r\n                , nombreCarrera\r\n                , asunto: \"solicitud\"\r\n            });\r\n\r\n            try {\r\n                // render the document (replace all occurences of {first_name} by John, {last_name} by Doe, ...)\r\n                doc.render()\r\n            }\r\n            catch (error) {\r\n                var e = {\r\n                    message: error.message,\r\n                    name: error.name,\r\n                    stack: error.stack,\r\n                    properties: error.properties,\r\n                }\r\n                console.log(JSON.stringify({ error: e }));\r\n                // The error thrown here contains additional information when logged with JSON.stringify (it contains a property object).\r\n                throw error;\r\n            }\r\n\r\n            var out = doc.getZip().generate({\r\n                type: \"blob\",\r\n                mimeType: \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\r\n            }) //Output the document using Data-URI\r\n\r\n            // https://github.com/eligrey/FileSaver.js/\r\n            saveAs(out, self.estudiante.carnet + \"-\" + detalle.dirigidoA + \"-\" + tipo + \".docx\");\r\n        });\r\n    }\r\n\r\n    docancel() {\r\n        const self = this;\r\n        self.ngOnInit();\r\n        self.read_only = true;\r\n    }\r\n}","import { Component, OnInit } from \"@angular/core\";\r\nimport { MensajeService } from 'src/app/mensaje.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { IncorporacionService } from 'src/app/incorporacion.service';\r\nimport { BodyResponse, Incorporacion } from 'src/app/modelos';\r\n\r\n@Component({\r\n    selector: \"estudiante-detalle-incorporaciones\"\r\n    , templateUrl: \"./incorporaciones.html\"\r\n})\r\n\r\nexport default class EstudianteIncorporacionesComponent implements OnInit {\r\n\r\n    constructor(\r\n        private mensajes: MensajeService\r\n        , private actived_route: ActivatedRoute\r\n        , private incorporaciones: IncorporacionService\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        const self = this;\r\n\r\n        self.actived_route.pathFromRoot[1].params.subscribe(item => {\r\n            const carnet = item.carnet;\r\n            self.dosel({ carnet });\r\n        });\r\n\r\n    }\r\n\r\n    body = new BodyResponse<Incorporacion[]>();\r\n\r\n    get list() {\r\n        const self = this;\r\n        if (!self.body.data) {\r\n            self.body.data = [];\r\n        }\r\n        return self.body.data;\r\n    }\r\n\r\n    async dosel(params: any = {}) {\r\n        const self = this;\r\n        // params.limit = 1;\r\n        self.body = await self.incorporaciones.sel(params);\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { MensajeService } from \"./mensaje.service\";\r\nimport { BodyResponse, Estudiante } from './modelos';\r\nimport { AppService } from './app.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EstudianteService extends AppService<Estudiante> {\r\n  name = \"estudiantes\"\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { EstudianteService } from \"./../estudiante.service\";\r\nimport { BodyResponse, Estudiante } from '../modelos';\r\n\r\n@Component({\r\n  selector: 'app-estudiante',\r\n  templateUrl: './estudiante.component.html',\r\n})\r\nexport class EstudianteComponent implements OnInit {\r\n\r\n  constructor(public estudiantes: EstudianteService) { }\r\n\r\n  ngOnInit() {\r\n    const self = this;\r\n    self.dosel();\r\n  }\r\n\r\n  body = new BodyResponse<Estudiante[]>();\r\n  selected = new Estudiante();\r\n  get list() {\r\n    const self = this;\r\n    return (self.body.data || []).filter(item => item.carnet.toString().indexOf(self.selected.carnet.toString()));\r\n  }\r\n\r\n  async dosel() {\r\n    const self = this;\r\n    self.body = await self.estudiantes.sel();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Incorporacion, BodyResponse } from './modelos';\r\nimport { AppService } from './app.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class IncorporacionService extends AppService<Incorporacion> {\r\n  name = \"incorporaciones\"\r\n  // sel() {\r\n  //   return new Promise<BodyResponse<Incorporacion[]>>((resolve) => {\r\n  //     const body = new BodyResponse<Incorporacion[]>();\r\n  //     body.data = [new Incorporacion(), new Incorporacion()];\r\n  //     body.data[0].idIncorporacion = 1;\r\n  //     body.data[0].carnet = 1111;\r\n  //     body.data[0].carrera = \"Carrera 1\";\r\n  //     body.data[0].institucion = \"Institución 1\";\r\n  //     body.data[0].idIncorporacion = 1;\r\n  //     body.data[0].correlativo = \"EPS-ALGO-1\";\r\n  //     body.data[0].fechaInicio = new Date();\r\n  //     body.data[0].fechaFinal = new Date();\r\n      \r\n  //     body.data[1].carnet = 2222;\r\n  //     body.data[1].carrera = \"Carrera 2\";\r\n  //     body.data[1].institucion = \"Institución 2\";\r\n  //     body.data[1].idIncorporacion = 2;\r\n  //     body.data[1].correlativo = \"EPS-ALGO-2\";\r\n  //     body.data[1].fechaInicio = new Date();\r\n  //     body.data[1].fechaFinal = new Date();\r\n\r\n  //     resolve(body);\r\n  //   });\r\n  // }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Incorporacion, BodyResponse } from '../modelos';\r\nimport { IncorporacionService } from '../incorporacion.service';\r\n\r\n@Component({\r\n  selector: 'app-inicio-panel',\r\n  templateUrl: './inicio-panel.component.html',\r\n})\r\nexport class PanelInicioComponent implements OnInit {\r\n\r\n  constructor(\r\n    private incorporaciones: IncorporacionService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.dosel();\r\n  }\r\n\r\n  incorporacion_body = new BodyResponse<Incorporacion[]>();\r\n  async dosel() {\r\n    const self = this;\r\n    self.incorporacion_body = await self.incorporaciones.sel();\r\n  }\r\n\r\n  get incorporacion_list(): Incorporacion[] {\r\n    const self = this;\r\n    if (!self.incorporacion_body.data) {\r\n      self.incorporacion_body.data = [];\r\n    }\r\n    return self.incorporacion_body.data;\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { InstitucionService } from \"../institucion.service\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { MensajeService } from '../mensaje.service';\r\nimport { Institucion, DetalleInstitucion, BodyResponse } from \"../modelos\"\r\n@Component({\r\n  selector: 'app-institucion-detalle',\r\n  templateUrl: './institucion-detalle.component.html',\r\n})\r\nexport class InstitucionDetalleComponent implements OnInit {\r\n\r\n  constructor(\r\n    private route: ActivatedRoute\r\n    , public instituciones: InstitucionService\r\n    , private router: Router\r\n    , private mensajes: MensajeService\r\n  ) { }\r\n\r\n  public read_only: Boolean = true\r\n\r\n  get upt_ready() {\r\n    const self = this;\r\n    const has_nombre = self.selected.nombre && self.selected.nombre.trim().length > 0 || false;\r\n    const has_detalle = self.selected.detalleInstitucion.length > 0\r\n      && 0 === self.selected.detalleInstitucion.filter(item => !(item.telefono > 0) || item.ubicacion.trim().length === 0).length;\r\n    return has_nombre && has_detalle;\r\n  }\r\n  get hay_contenido() {\r\n    const self = this;\r\n    return self.selected.idInstitucion > 0;\r\n  }\r\n  get selected() {\r\n    const self = this;\r\n    if (!self.body.data) {\r\n      self.body.data = new Institucion();\r\n    }\r\n    return self.body.data;\r\n  }\r\n\r\n  body = new BodyResponse<Institucion>();\r\n\r\n  get list() {\r\n    const self = this\r\n    return self.selected && self.selected.detalleInstitucion || [];\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    const self = this;\r\n    self.route.params.subscribe(params => {\r\n      self.doget(params.idInstitucion)\r\n    });\r\n  }\r\n\r\n  async doget(idInstitucion: Number) {\r\n    const self = this;\r\n    self.body = await self.instituciones.get(idInstitucion);\r\n    self.read_only = self.selected.idInstitucion > 0;\r\n  }\r\n  doedit(item) {\r\n    if (item) {\r\n      item.backup = {};\r\n      item.backup.idDetalleInstitucion = item.idDetalleInstitucion;\r\n      item.backup.telefono = item.telefono;\r\n      item.backup.ubicacion = item.ubicacion;\r\n      item.upt_ready = false;\r\n      item.read_only = false;\r\n    }\r\n  }\r\n  docancel(item) {\r\n    window.location.reload();\r\n  }\r\n\r\n  async docreate() {\r\n    const self = this;\r\n    const body = await self.instituciones.create({ ...self.selected });\r\n\r\n    const data = <Institucion>body.data;\r\n    if (data.idInstitucion > 0) {\r\n      self.mensajes.create_info(\"Institución creada.\");\r\n      self.router.navigate([\"/institucion/\" + data.idInstitucion]);\r\n    }\r\n  }\r\n\r\n\r\n  doadd() {\r\n    const self = this;\r\n    self.list.push(new DetalleInstitucion());\r\n  }\r\n\r\n  async doupt() {\r\n    const self = this;\r\n    const data = { ...self.selected };\r\n    const body = await self.instituciones.upt(self.selected.idInstitucion, data);\r\n    if (body && body.total > 0) {\r\n      self.mensajes.create_info(\"¡Hecho!\");\r\n      self.read_only = true;\r\n    }\r\n  }\r\n\r\n  async dodel() {\r\n    if (confirm(\"¿Estas seguro de eliminar la institución?\")) {\r\n      const body = await this.instituciones.del(this.selected.idInstitucion);\r\n\r\n      if (body.total > 0) {\r\n        this.router.navigate([\"/institucion\"])\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Institucion } from './modelos';\r\nimport { AppService } from './app.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class InstitucionService extends AppService<Institucion> {\r\n  name = \"instituciones\"\r\n}\r\n","import { Component, OnInit, Input, OnChanges, Output, EventEmitter } from \"@angular/core\";\r\nimport { InstitucionService } from '../institucion.service';\r\nimport { Institucion, BodyResponse } from '../modelos';\r\n\r\n@Component({\r\n    selector: \"institucion-list\"\r\n    , templateUrl: \"./InstitucionList.html\"\r\n})\r\n\r\nexport class InstitucionListComponent implements OnInit, OnChanges {\r\n    constructor(\r\n        private instituciones: InstitucionService\r\n    ) {\r\n    }\r\n\r\n    @Input() selected = new Institucion();\r\n    @Output() changed = new EventEmitter<Institucion>();\r\n\r\n    ngOnChanges(){\r\n        console.log(arguments)\r\n    }\r\n\r\n    get list() {\r\n        const self = this;\r\n        return self.body && self.body.data || [];\r\n    }\r\n\r\n    body = new BodyResponse<Institucion[]>();\r\n    async ngOnInit() {\r\n        const self = this;\r\n        self.body = await self.instituciones.sel();\r\n    }\r\n\r\n    readonly = true;\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { InstitucionService } from \"./../institucion.service\";\r\nimport { Router } from \"@angular/router\"\r\nimport { BodyResponse, Institucion } from '../modelos';\r\n@Component({\r\n  selector: 'app-institucion',\r\n  templateUrl: './institucion.component.html',\r\n})\r\nexport class InstitucionComponent implements OnInit {\r\n\r\n  selected = new Institucion();\r\n\r\n  get create_ready() {\r\n    try {\r\n      return this.selected.nombre.trim().length > 0;\r\n    } catch (error) {\r\n    }\r\n    return false;\r\n  }\r\n  constructor(\r\n    public instituciones: InstitucionService\r\n    , private router: Router\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.dosel();\r\n  }\r\n\r\n  body = new BodyResponse<Institucion[]>();\r\n  get list() {\r\n    const self = this;\r\n    if (!self.body.data) {\r\n      self.body.data = [];\r\n    }\r\n    const nombre = self.selected.nombre.trim().toLowerCase();\r\n    if (nombre.length > 0) {\r\n      return self.body.data.filter(item => item.nombre.trim().toLowerCase().indexOf(nombre) >= 0);\r\n    }\r\n    return self.body.data;\r\n  }\r\n\r\n  async dosel() {\r\n    const self = this;\r\n    self.body = await self.instituciones.sel();\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MensajeService {\r\n  list = []\r\n\r\n  loading = false;\r\n\r\n  constructor() { }\r\n\r\n  create(data) {\r\n    this.list.push(data);\r\n    window.scrollTo(0, 0);\r\n  }\r\n  create_danger(text) {\r\n    this.create({\r\n      class: \"is-danger\"\r\n      , text\r\n    })\r\n  }\r\n  create_info(text) {\r\n    this.create({\r\n      class: \"is-info\"\r\n      , text\r\n    })\r\n  }\r\n\r\n  del(index) {\r\n    this.list.splice(index, 1);\r\n  }\r\n\r\n  create_from_http_response(error: HttpErrorResponse) {\r\n    this.create_danger(error && error.message || error.statusText || error)\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { inherits } from 'util';\r\n\r\n@Component({\r\n    selector: \"simple-menu\"\r\n    , templateUrl: \"./simple.html\"\r\n})\r\n\r\nexport class SimpleMenuComponent implements OnInit {\r\n    \r\n    constructor(){\r\n        \r\n    }\r\n\r\n    ngOnInit(){\r\n    }\r\n\r\n\r\n}","export class Incorporacion {\r\n\r\n    public idIncorporacion = 0\r\n    public asesor = \"\"\r\n    public asesorSupervisor = \"\"\r\n    public correlativoDoc = 0\r\n    public fechaIncorporacion: Date = null\r\n    public fechaFinal: Date = null\r\n    public fechaFinalSeguro: Date = null\r\n    public fechaInicio: Date = null\r\n    public fechaInicioSeguro: Date = null\r\n    public semestre = 0\r\n    public supervisor = \"\"\r\n    public tiempoEps = 0\r\n    public fkEstudianteCarnet: Estudiante\r\n    public fkInstitucion: Institucion\r\n    public fkCarta: Carta\r\n}\r\n\r\nexport class Carta {\r\n    public destinatario = \"\"\r\n    public idCarta = 0\r\n    public detalleCartaList: CartaDetalle[] = []\r\n}\r\n\r\nexport class CartaDetalle {\r\n    public dirigidoA = \"\"\r\n    public cargo = \"\"\r\n    public idDetalleCarta = 0\r\n}\r\nexport class Carrera {\r\n    public codigoCarrera = 0\r\n    public nombre = \"\"\r\n}\r\n\r\nexport class estudianteCarreraListItem {\r\n    public fkCarrera: Carrera\r\n}\r\n\r\nexport class Estudiante {\r\n    public carnet: number = 0\r\n    public cui: number = 0\r\n    public nombre: String = \"\"\r\n    public telefono: number = 0\r\n    public correo: String = \"\"\r\n    public estudianteCarreraList: estudianteCarreraListItem[] = []\r\n}\r\n\r\nexport class Institucion {\r\n    public idInstitucion: number = 0\r\n    public nombre: string = \"\"\r\n    public detalleInstitucion: DetalleInstitucion[] = []\r\n}\r\n\r\nexport class DetalleInstitucion {\r\n    public telefono: Number = 0\r\n    public ubicacion: String = \"\"\r\n}\r\n\r\nexport class BodyResponse<T> {\r\n    public data: T = null\r\n    public error: any = null\r\n    public total: Number = 0\r\n    public limi: Number = 0\r\n    public skip: Number = 0\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}